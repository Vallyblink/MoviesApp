{"version":3,"file":"static/js/189.b8dcc49f.chunk.js","mappings":"sSACMA,EAAU,mCAEVC,EAAS,mCAAG,WAAOC,GAAP,kGAESC,MAAMD,GAFf,cAERE,EAFQ,gBAGKA,EAASC,OAHd,cAGRC,EAHQ,yBAIPA,GAJO,wCAMdC,QAAQC,MAAM,SAAd,MACM,IAAIC,MAAM,uDAPF,0DAAH,sDAYFC,EAAiB,mCAAG,2FACzBR,EADyB,iEACuCF,GADvC,kBAExBC,EAAUC,IAFc,2CAAH,qDAKjBS,EAAc,mCAAG,WAAOC,GAAP,8EACtBV,EADsB,6CACsBU,EADtB,oBACyCZ,GADzC,kBAErBC,EAAUC,IAFW,2CAAH,sDAKdW,EAAe,mCAAG,WAAOD,GAAP,8EACvBV,EADuB,6CACqBU,EADrB,4BACgDZ,GADhD,kBAEtBC,EAAUC,IAFY,2CAAH,sDAKfY,EAAe,mCAAG,WAAOF,GAAP,8EACvBV,EADuB,6CACqBU,EADrB,4BACgDZ,GADhD,kBAEtBC,EAAUC,IAFY,2CAAH,sDAKfa,EAAY,mCAAG,WAAOC,GAAP,8EACpBd,EADoB,4DACuCF,EADvC,kBACwDgB,GADxD,kBAEnBf,EAAUC,IAFS,2CAAH,qD,kDCZzB,IAnBkB,SAAC,GAAe,IAAbe,EAAY,EAAZA,MACnB,OACE,4BACE,SAAC,KAAD,CAASC,GAAE,kBAAaD,EAAME,IAA9B,UACE,gBAAKC,IAAG,yCAAoCH,EAAMI,aAAeC,IAAKL,EAAMM,WAE9E,wBAAKN,EAAMM,UAGhB,C,sICZD,EAA4B,0BAA5B,EAA8D,sBAA9D,EAA6F,uBAA7F,EAAsI,gC,SCyCtI,EArCe,WACb,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOR,EAAP,KAAcS,EAAd,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOE,EAAP,KAAeC,EAAf,KAEMC,EAAY,mCAAG,8GAEEb,EAAAA,EAAAA,IAAaC,GAFf,OAEXV,EAFW,OAGjBqB,EAAUrB,EAAKuB,SAHE,gDAKjBtB,QAAQC,MAAM,SAAd,MALiB,yDAAH,qDAUnB,OACG,iBAAKsB,UAAWC,EAAhB,WACE,2CACA,4BACE,kBACED,UAAWC,EACXC,KAAK,OACLC,MAAOjB,EACPkB,SAAU,SAACC,GAAD,OAAOV,EAASU,EAAEC,OAAOH,MAAzB,KAEZ,mBAAQH,UAAWC,EAAeM,QAAST,EAA3C,wBAIF,gBAAKE,UAAWC,EAAhB,SACGL,EAAOY,KAAI,SAACrB,GAAD,OACV,SAACsB,EAAA,EAAD,CAA0BtB,MAAOA,GAAjBA,EAAME,GADZ,QAMnB,C,sBCxCD,SAASqB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBd,EAAQe,EAAKf,KAInB,CAHE,MAAOzB,GAEP,YADAmC,EAAOnC,EAET,CACIwC,EAAKC,KACPP,EAAQT,GAERiB,QAAQR,QAAQT,GAAOkB,KAAKP,EAAOC,EAEvC,CACe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIP,SAAQ,SAAUR,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GACzB,SAASZ,EAAMX,GACbO,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQZ,EAClE,CACA,SAASY,EAAOc,GACdnB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASc,EACnE,CACAf,OAAMgB,EACR,GACF,CACF,C","sources":["Services/API.jsx","components/MovieCard.jsx","webpack://react-homework-template/./src/cssModules/Movies.module.css?d67d","pages/Movies.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["\nconst API_KEY = 'b88a88f6d693c3f898a66b1a92673ff7'\n\nconst fetchData = async (url) => {\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error:', error);\n    throw new Error('An error occurred while fetching data from the API.');\n  }\n};\n\n\nexport const getTrendingMovies = async () => {\n  const url = `https://api.themoviedb.org/3/trending/all/week?api_key=${API_KEY}`;\n  return fetchData(url);\n};\n\nexport const getMovieDetail = async (movieId) => {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`\n  return fetchData(url)\n}\n\nexport const getMovieCredits = async (movieId) => {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`\n  return fetchData(url)\n}\n\nexport const getMovieReviews = async (movieId) => {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}`\n  return fetchData(url)\n}\n\nexport const searchMovies = async (query) => {\n  const url = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}`;\n  return fetchData(url);\n};","import React from 'react';\nimport { NavLink, } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst MovieCard = ({ movie }) => {\n  return (\n    <div>\n      <NavLink to={`/movies/${movie.id}`}>\n        <img src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} alt={movie.title} />\n      </NavLink>\n      <h3>{movie.title}</h3>\n    </div>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    poster_path: PropTypes.string,\n    title: PropTypes.string,\n  }),\n};\n\nexport default MovieCard;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Movies_container__DUDUb\",\"input\":\"Movies_input__t1oDo\",\"button\":\"Movies_button__JCXoi\",\"moviesContainer\":\"Movies_moviesContainer__CGIB9\",\"title\":\"Movies_title__cFo5o\"};","import React, { useState } from 'react'\nimport MovieCard from 'components/MovieCard';\nimport { searchMovies } from 'Services/API';\nimport styles from '../cssModules/Movies.module.css'\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n \n  const handleSearch = async () => {\n    try {\n      const data = await searchMovies(query);\n      setMovies(data.results);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n\n return (\n    <div className={styles.container}>\n      <h1>Search Movies</h1>\n      <div>\n        <input\n          className={styles.input}\n          type=\"text\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n        />\n        <button className={styles.button} onClick={handleSearch}>\n          Search\n        </button>\n      </div>\n      <div className={styles.moviesContainer}>\n        {movies.map((movie) => (\n          <MovieCard key={movie.id} movie={movie} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Movies\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["API_KEY","fetchData","url","fetch","response","json","data","console","error","Error","getTrendingMovies","getMovieDetail","movieId","getMovieCredits","getMovieReviews","searchMovies","query","movie","to","id","src","poster_path","alt","title","useState","setQuery","movies","setMovies","handleSearch","results","className","styles","type","value","onChange","e","target","onClick","map","MovieCard","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}