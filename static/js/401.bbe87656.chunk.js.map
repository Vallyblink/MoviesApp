{"version":3,"file":"static/js/401.bbe87656.chunk.js","mappings":"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","sources":["Services/API.jsx","components/MovieCredits.jsx","components/MovieReviews.jsx","components/MovieInfo.jsx","components/MovieDetails.jsx","pages/MovieDetails.jsx","webpack://react-homework-template/./src/cssModules/MovieDetails.module.css?9235","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["\nconst API_KEY = 'b88a88f6d693c3f898a66b1a92673ff7'\n\nconst fetchData = async (url) => {\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error:', error);\n    throw new Error('An error occurred while fetching data from the API.');\n  }\n};\n\n\nexport const getTrendingMovies = async () => {\n  const url = `https://api.themoviedb.org/3/trending/all/week?api_key=${API_KEY}`;\n  return fetchData(url);\n};\n\nexport const getMovieDetail = async (movieId) => {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`\n  return fetchData(url)\n}\n\nexport const getMovieCredits = async (movieId) => {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`\n  return fetchData(url)\n}\n\nexport const getMovieReviews = async (movieId) => {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}`\n  return fetchData(url)\n}\n\nexport const searchMovies = async (query) => {\n  const url = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}`;\n  return fetchData(url);\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from '../cssModules/MovieDetails.module.css';\n\nconst MovieCredits = ({ credits }) => {\n  return (\n    <div className={styles.credits}>\n      <h2>Credits</h2>\n      <ul>\n        {credits.cast.map((person) => (\n          <li key={person.id}>\n            <img src={`https://image.tmdb.org/t/p/w200${person.profile_path}`} alt={person.name} />\n            <div>\n              <h3>{person.name}</h3>\n              <p>{person.character}</p>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nMovieCredits.propTypes = {\n  credits: PropTypes.shape({\n    cast: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        profile_path: PropTypes.string,\n        name: PropTypes.string.isRequired,\n        character: PropTypes.string.isRequired,\n      })\n    ),\n  }),\n};\n\nexport default MovieCredits;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from '../cssModules/MovieDetails.module.css';\n\nconst MovieReviews = ({ reviews }) => {\n  return (\n    <div className={styles.reviews}>\n      <h2>Reviews</h2>\n      <ul>\n        {reviews.results.map((review) => (\n          <li key={review.id}>\n            <h3>{review.author}</h3>\n            <p>{review.content}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nMovieReviews.propTypes = {\n  reviews: PropTypes.shape({\n    results: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string,\n        author: PropTypes.string,\n        content: PropTypes.string,\n      })\n    ),\n  }),\n};\n\nexport default MovieReviews;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from '../cssModules/MovieDetails.module.css';\n\nconst MovieInfo = ({ movie }) => {\n  return (\n    <div className={styles.movieInfo}>\n      <h1>{movie.title}</h1>\n      <img src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} alt={movie.title} />\n      <p>{movie.overview}</p>\n      <p>Release Date: {movie.release_date}</p>\n      <p>Vote Average: {movie.vote_average}</p>\n      <p>Genres: {movie.genres.map((genre) => genre.name).join(', ')}</p>\n    </div>\n  );\n};\n\nMovieInfo.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string,\n    poster_path: PropTypes.string,\n    overview: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string.isRequired,\n      })\n    ),\n  }),\n};\n\nexport default MovieInfo;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from '../cssModules/MovieDetails.module.css';\nimport { Link, useNavigate } from 'react-router-dom';\nimport MovieInfo from './MovieInfo';\nimport MovieCredits from './MovieCredits';\nimport MovieReviews from './MovieReviews';\n\nconst MovieDetails = ({ movie, credits, reviews }) => {\n  const [showCredits, setShowCredits] = useState(false);\n  const [showReviews, setShowReviews] = useState(false);\n  const navigate = useNavigate();\n\n  const toggleCredits = () => {\n    setShowCredits(!showCredits);\n  };\n\n  const toggleReviews = () => {\n    setShowReviews(!showReviews);\n  };\n\n  const handleCreditsClick = () => {\n    toggleCredits();\n    navigate('credits');\n  };\n\n  const handleReviewsClick = () => {\n    toggleReviews();\n    navigate('reviews');\n  };\n\n  return (\n    <div className={styles.container}>\n      <MovieInfo movie={movie} />\n      <div>\n        <div className={styles.buttons}>\n          <button\n            className={`${styles.linkButton} ${showCredits ? styles.activeButton : ''}`}\n            onClick={handleCreditsClick}\n          >\n            {showCredits ? 'Hide Credits' : 'Show Credits'}\n          </button>\n          {showCredits && credits && <MovieCredits credits={credits} />}\n          <button\n            className={`${styles.linkButton} ${showReviews ? styles.activeButton : ''}`}\n            onClick={handleReviewsClick}\n          >\n            {showReviews ? 'Hide Reviews' : 'Show Reviews'}\n          </button>\n          {showReviews && reviews && <MovieReviews reviews={reviews} />}\n        </div>\n        <div className={styles.goBackButton}>\n          <Link to=\"/\" className={styles.backButton}>\n            Go Back\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nMovieDetails.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string,\n    poster_path: PropTypes.string,\n    overview: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string.isRequired,\n      })\n    ),\n  }),\n  credits: PropTypes.shape({\n    cast: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        profile_path: PropTypes.string,\n        name: PropTypes.string.isRequired,\n        character: PropTypes.string.isRequired,\n      })\n    ),\n  }),\n  reviews: PropTypes.shape({\n    results: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string,\n        author: PropTypes.string,\n        content: PropTypes.string,\n      })\n    ),\n  }),\n};\n\nexport default MovieDetails;","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieDetail, getMovieCredits, getMovieReviews } from 'Services/API';\nimport MovieDetails from '../components/MovieDetails';\n\nconst MovieDetailsPage = () => {\n  const { id } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [credits, setCredits] = useState(null);\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const details = await getMovieDetail(id);\n        const movieCredit = await getMovieCredits(id);\n        const movieReview = await getMovieReviews(id);\n\n        setMovie(details);\n        setCredits(movieCredit);\n        setReviews(movieReview);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [id]);\n\n  return (\n    <div>\n      {movie && (\n        <MovieDetails\n          movie={movie}\n          credits={credits}\n          reviews={reviews}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDetails_container__6Tnvj\",\"movieInfo\":\"MovieDetails_movieInfo__9O1p6\",\"buttons\":\"MovieDetails_buttons__FvgHh\",\"linkButton\":\"MovieDetails_linkButton__bl3YJ\",\"activeButton\":\"MovieDetails_activeButton__NslGL\",\"credits\":\"MovieDetails_credits__CUB9B\",\"reviews\":\"MovieDetails_reviews__zNfkk\",\"goBackButton\":\"MovieDetails_goBackButton__yXmAT\"};","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["API_KEY","fetchData","url","fetch","response","json","data","console","error","Error","getTrendingMovies","getMovieDetail","movieId","getMovieCredits","getMovieReviews","searchMovies","query","credits","className","styles","cast","map","person","src","profile_path","alt","name","character","id","reviews","results","review","author","content","movie","title","poster_path","overview","release_date","vote_average","genres","genre","join","useState","showCredits","setShowCredits","showReviews","setShowReviews","navigate","useNavigate","onClick","MovieCredits","MovieReviews","to","useParams","setMovie","setCredits","setReviews","useEffect","fetchMovieDetails","details","movieCredit","movieReview","log","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}