{"version":3,"file":"static/js/744.c416efba.chunk.js","mappings":"sSACMA,EAAU,mCAEVC,EAAS,mCAAG,WAAOC,GAAP,kGAESC,MAAMD,GAFf,cAERE,EAFQ,gBAGKA,EAASC,OAHd,cAGRC,EAHQ,yBAIPA,GAJO,wCAMdC,QAAQC,MAAM,SAAd,MACM,IAAIC,MAAM,uDAPF,0DAAH,sDAYFC,EAAiB,mCAAG,2FACzBR,EADyB,iEACuCF,GADvC,kBAExBC,EAAUC,IAFc,2CAAH,qDAKjBS,EAAc,mCAAG,WAAOC,GAAP,8EACtBV,EADsB,6CACsBU,EADtB,oBACyCZ,GADzC,kBAErBC,EAAUC,IAFW,2CAAH,sDAKdW,EAAe,mCAAG,WAAOD,GAAP,8EACvBV,EADuB,6CACqBU,EADrB,4BACgDZ,GADhD,kBAEtBC,EAAUC,IAFY,2CAAH,sDAKfY,EAAe,mCAAG,WAAOF,GAAP,8EACvBV,EADuB,6CACqBU,EADrB,4BACgDZ,GADhD,kBAEtBC,EAAUC,IAFY,2CAAH,sDAKfa,EAAY,mCAAG,WAAOC,GAAP,8EACpBd,EADoB,4DACuCF,EADvC,kBACwDgB,GADxD,kBAEnBf,EAAUC,IAFS,2CAAH,qD,kDCZzB,IAnBkB,SAAC,GAAe,IAAbe,EAAY,EAAZA,MACnB,OACE,4BACE,SAAC,KAAD,CAASC,GAAE,kBAAaD,EAAME,IAA9B,UACE,gBAAKC,IAAG,yCAAoCH,EAAMI,aAAeC,IAAKL,EAAMM,WAE9E,wBAAKN,EAAMM,UAGhB,C,sICZD,EAAkC,kCAAlC,EAA4E,wB,SCsC5E,EAhCiB,WACf,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,8GAEGlB,EAAAA,EAAAA,MAFH,OAEVJ,EAFU,OAGhBoB,EAAUpB,EAAKuB,SACftB,QAAQuB,IAAIxB,EAAKuB,SAJD,gDAOftB,QAAQC,MAAM,yBAAd,MAPe,yDAAH,qDAYjBoB,GACD,GAAE,KAGD,4BACE,eAAIG,UAAWC,EAAf,4BACA,gBAAKD,UAAWC,EAAhB,SACGP,EAAOQ,KAAI,SAAChB,GAAD,OACV,SAACiB,EAAA,EAAD,CAA0BjB,MAAQA,GAAlBA,EAAME,GADZ,QAOnB,C,sBCrCD,SAASgB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOpC,GAEP,YADA8B,EAAO9B,EAET,CACImC,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOG,KAAKR,EAAOC,EAEvC,CACe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIP,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GACzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CACA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CACAhB,OAAMiB,EACR,GACF,CACF,C","sources":["Services/API.jsx","components/MovieCard.jsx","webpack://react-homework-template/./src/cssModules/HomePage.module.css?d4ac","pages/HomePage.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["\nconst API_KEY = 'b88a88f6d693c3f898a66b1a92673ff7'\n\nconst fetchData = async (url) => {\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error:', error);\n    throw new Error('An error occurred while fetching data from the API.');\n  }\n};\n\n\nexport const getTrendingMovies = async () => {\n  const url = `https://api.themoviedb.org/3/trending/all/week?api_key=${API_KEY}`;\n  return fetchData(url);\n};\n\nexport const getMovieDetail = async (movieId) => {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`\n  return fetchData(url)\n}\n\nexport const getMovieCredits = async (movieId) => {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`\n  return fetchData(url)\n}\n\nexport const getMovieReviews = async (movieId) => {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}`\n  return fetchData(url)\n}\n\nexport const searchMovies = async (query) => {\n  const url = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}`;\n  return fetchData(url);\n};","import React from 'react';\nimport { NavLink, } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst MovieCard = ({ movie }) => {\n  return (\n    <div>\n      <NavLink to={`/movies/${movie.id}`}>\n        <img src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} alt={movie.title} />\n      </NavLink>\n      <h3>{movie.title}</h3>\n    </div>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    poster_path: PropTypes.string,\n    title: PropTypes.string,\n  }),\n};\n\nexport default MovieCard;","// extracted by mini-css-extract-plugin\nexport default {\"moviesContainer\":\"HomePage_moviesContainer__wsLav\",\"title\":\"HomePage_title__C3KFX\"};","import React from 'react'\nimport {useState, useEffect } from 'react'\nimport  {getTrendingMovies}  from 'Services/API'\nimport MovieCard from 'components/MovieCard'\nimport styles from '../cssModules/HomePage.module.css'\n\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([])\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const data = await getTrendingMovies();\n        setMovies(data.results);\n        console.log(data.results)\n        \n      } catch (error) {\n         console.error('Error fetching movies:', error);\n        \n      }\n    };\n\n    fetchMovies()\n  }, [])\n  \n  return (\n    <div>\n      <h1 className={styles.title}>Trending  Now</h1>\n      <div className={styles.moviesContainer}>\n        {movies.map((movie) => (\n          <MovieCard key={movie.id} movie ={movie}/>\n        ))}\n      </div>\n  </div>\n    \n  )\n}\n\nexport default HomePage\n\n\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["API_KEY","fetchData","url","fetch","response","json","data","console","error","Error","getTrendingMovies","getMovieDetail","movieId","getMovieCredits","getMovieReviews","searchMovies","query","movie","to","id","src","poster_path","alt","title","useState","movies","setMovies","useEffect","fetchMovies","results","log","className","styles","map","MovieCard","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}